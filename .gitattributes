import java.awt.*;
import java.util.*;
import javax.swing.*;
import java.awt.event.*;

public class UserGUI extends JFrame implements ActionListener {
 JFrame frame;
 JPanel p;
 JTextField tfName, tfAddress, tfJob; // 이름, 주소, 직업
 JTextField tfPhone1, tfPhone2, tfPhone3; // 핸드폰번호
 Choice CYear, CMonth, CDay; // 생년월일
 Choice S_Year, S_Month, S_Day; // 등록일
 Choice E_Year, E_Month, E_Day; // 만료일
 JRadioButton rbMan, rbWoman; // 성별
 JRadioButton rbYes, rbNo; // 개인PT신청 유무
 JButton btnAdd, btnCancel, btnModify, btnRemove; // 가입, 취소, 수정, 탈퇴
 
 GridBagLayout gb;
 GridBagConstraints gbc;
 UserManager UList;

 public UserGUI()
 {
  CreateGUI();
  btnModify.setEnabled(false);
  btnModify.setVisible(false);
  btnRemove.setEnabled(false);
  btnRemove.setVisible(false);
  
  
 }
 public UserGUI(String num)
 {
  CreateGUI();
  btnAdd.setEnabled(false);
  btnAdd.setVisible(false);
 }
 private void CreateGUI()
 {
  this.setTitle("회원정보");
  gb = new GridBagLayout();
  setLayout(gb);
  gbc = new GridBagConstraints();
  gbc.fill = GridBagConstraints.BOTH;
  gbc.weightx = 1.0;
  gbc.weighty = 1.0;
  
  //회원이름
  JLabel LBName = new JLabel("회원이름 : ");
  tfName = new JTextField(5);
  // 그리드백에 추가
  gbAdd(LBName, 0, 0, 1, 1);
  gbAdd(tfName, 1, 0 , 1, 1);
  
  //생년월일
  JLabel LBBirth = new JLabel("생년월일 : ");
  CYear = new Choice();
  JLabel LBYear = new JLabel("년");
  CMonth = new Choice();
  JLabel LBMonth = new JLabel("월");
  CDay = new Choice();
  JLabel LBDay = new JLabel("일");
  CYear.add("-------");
  for(int i = 2010; i >= 1930; i--)
  {
   CYear.add(String.valueOf(i));
  } // CYear의 choice에 추가
  CMonth.add("-------");
  for(int i = 1; i <= 12; i++)
  {
   CMonth.add(String.valueOf(i));
  } // CMonth의 choice에 추가
  CDay.add("-------");
  if(CMonth.getSelectedIndex() == 2)
  {
   for(int i = 1; i <= 28; i++)
   {
    CDay.add(String.valueOf(i));
   }
  }
  else if(CMonth.getSelectedIndex() == 4 || CMonth.getSelectedIndex() == 6 || CMonth.getSelectedIndex() == 9 || CMonth.getSelectedIndex() == 11)
  {
   for(int i = 1; i <= 30; i++)
   {
    CDay.add(String.valueOf(i));
   }
  }
  else if(CMonth.getSelectedIndex() == 1 || CMonth.getSelectedIndex() == 3 || CMonth.getSelectedIndex() == 5 || CMonth.getSelectedIndex() == 7 || CMonth.getSelectedIndex() == 8 || CMonth.getSelectedIndex() == 10 || CMonth.getSelectedIndex() == 12)
  {
   for(int i = 1; i <= 31; i++)
   {
    CDay.add(String.valueOf(i));
   }
  }
  JPanel PBirth = new JPanel(new FlowLayout(FlowLayout.LEFT));
  PBirth.add(CYear);
  PBirth.add(LBYear);
  PBirth.add(CMonth);
  PBirth.add(LBMonth);
  PBirth.add(CDay);
  PBirth.add(LBDay);
  gbAdd(LBBirth, 0, 1, 1, 1);
  gbAdd(PBirth, 1, 1, 3, 1);
  
  //성별
  JLabel LBGender = new JLabel("성별 : ");
  rbMan = new JRadioButton("남",true);
  rbWoman = new JRadioButton("여",true);
  JPanel PGender = new JPanel(new FlowLayout(FlowLayout.LEFT));
  ButtonGroup group = new ButtonGroup();
  group.add(rbMan);
  group.add(rbWoman);
  PGender.add(rbMan);
  PGender.add(rbWoman);
  gbAdd(LBGender, 0, 2, 1, 1);
  gbAdd(PGender, 1, 2, 3, 1);
  
  //핸드폰번호
  JLabel LBPhone = new JLabel("핸드폰번호 : ");
  tfPhone1 = new JTextField(5);
  tfPhone2 = new JTextField(5);
  tfPhone3 = new JTextField(5);
  JPanel PPhone = new JPanel(new FlowLayout(FlowLayout.LEFT));
  PPhone.add(tfPhone1);
  PPhone.add(new JLabel(" - "));
  PPhone.add(tfPhone2);
  PPhone.add(new JLabel(" - "));
  PPhone.add(tfPhone3);
  gbAdd(LBPhone, 0, 3, 1, 1);
  gbAdd(PPhone, 1, 3, 3, 1);
  
  //직업
  JLabel LBJob = new JLabel("직업 : ");
  tfJob = new JTextField(5);
  gbAdd(LBJob, 0, 4, 1, 1);
  gbAdd(tfJob, 1, 4, 3, 1);
  
  //주소
  JLabel LBAddress = new JLabel("주소 : ");
  tfAddress = new JTextField(10);
  gbAdd(LBAddress, 0, 5, 1, 1);
  gbAdd(tfAddress, 1, 5, 3, 1);
  
  //개인PT 유무
  JLabel LBKind = new JLabel("개인PT : ");
  rbYes = new JRadioButton("Y",true);
  rbNo = new JRadioButton("N",true);
  JPanel PKind = new JPanel(new FlowLayout(FlowLayout.LEFT));
  ButtonGroup group1 = new ButtonGroup();
  group1.add(rbYes);
  group1.add(rbNo);
  PKind.add(rbYes);
  PKind.add(rbNo);
  gbAdd(LBKind, 0, 6, 1, 1);
  gbAdd(PKind, 1, 6, 3, 1);
  
  //등록일
  JLabel LBS_day = new JLabel("등록일 : ");
  S_Year = new Choice();
  JLabel LBS_Year = new JLabel("년");
  S_Month = new Choice();
  JLabel LBS_Month = new JLabel("월");
  S_Day = new Choice();
  JLabel LBS_Day = new JLabel("일");
  S_Year.add("-------");
  for(int i = 2015; i >= 2010; i--)
  {
   S_Year.add(String.valueOf(i));
  }
  S_Month.add("-------");
  for(int i = 1; i <= 12; i++)
  {
   S_Month.add(String.valueOf(i));
  }
  S_Day.add("-------");
  if(S_Month.getSelectedIndex() == 1)
  {
   for(int i = 1; i <= 28; i++)
   {
    S_Day.add(String.valueOf(i));
   }
  }
  else if(S_Month.getSelectedIndex() == 3 || S_Month.getSelectedIndex() == 5 || S_Month.getSelectedIndex() == 8 || S_Month.getSelectedIndex() == 10)
  {
   for(int i = 1; i <= 30; i++)
   {
    S_Day.add(String.valueOf(i));
   }
  }
  else
  {
   for(int i = 1; i <= 31; i++)
   {
    S_Day.add(String.valueOf(i));
   }
  }
  JPanel PS_day = new JPanel(new FlowLayout(FlowLayout.LEFT));
  PS_day.add(S_Year);
  PS_day.add(LBS_Year);
  PS_day.add(S_Month);
  PS_day.add(LBS_Month);
  PS_day.add(S_Day);
  PS_day.add(LBS_Day);
  gbAdd(LBS_day, 0, 7, 1, 1);
  gbAdd(PS_day, 1, 7, 3, 1);
  
  
  //만료일
  JLabel LBE_day = new JLabel("만료일 : ");
  E_Year = new Choice();
  JLabel LBE_Year = new JLabel("년");
  E_Month = new Choice();
  JLabel LBE_Month = new JLabel("월");
  E_Day = new Choice();
  JLabel LBE_Day = new JLabel("일");
  
  E_Year.add("-------");
  for(int i = 2017; i >= 2015; i--)
  {
   E_Year.add(String.valueOf(i));
  }
  E_Month.add("-------");
  for(int i = 1; i <= 12; i++)
  {
   E_Month.add(String.valueOf(i));
  }
  E_Day.add("-------");
  if(E_Month.getSelectedIndex() == 1)
  {
   for(int i = 1; i <= 28; i++)
   {
    CDay.add(String.valueOf(i));
   }
  }
  else if(E_Month.getSelectedIndex() == 3 || E_Month.getSelectedIndex() == 5 || E_Month.getSelectedIndex() == 8 || E_Month.getSelectedIndex() == 10)
  {
   for(int i = 1; i <= 30; i++)
   {
    E_Day.add(String.valueOf(i));
   }
  }
  else
  {
   for(int i = 1; i <= 31; i++)
   {
    E_Day.add(String.valueOf(i));
   }
  }
  JPanel PE_day = new JPanel(new FlowLayout(FlowLayout.LEFT));
  PE_day.add(E_Year);
  PE_day.add(LBE_Year);
  PE_day.add(E_Month);
  PE_day.add(LBE_Month);
  PE_day.add(E_Day);
  PE_day.add(LBE_Day);
  gbAdd(LBE_day, 0, 8, 1, 1);
  gbAdd(PE_day, 1, 8, 3, 1);
  
  //버튼
  JPanel PButton = new JPanel();
  btnAdd = new JButton("가입");
  btnModify = new JButton("수정");
  btnRemove = new JButton("탈퇴");
  btnCancel = new JButton("취소");
  PButton.add(btnAdd);
  PButton.add(btnModify);
  PButton.add(btnRemove);
  PButton.add(btnCancel);
  
  gbAdd(PButton, 0, 9, 4, 1);
  
  btnAdd.addActionListener(this);
  btnModify.addActionListener(this);
  btnRemove.addActionListener(this);
  btnCancel.addActionListener(this);
  
  setSize(350, 500);
  setVisible(true);
  setDefaultCloseOperation(DISPOSE_ON_CLOSE); // 현재창만 종료 
 }
 private void gbAdd(JComponent c, int x, int y, int w, int h) 
 {
  gbc.gridx = x;
  gbc.gridy = y;
  gbc.gridwidth = w;
  gbc.gridheight = h;
  gb.setConstraints(c, gbc);
  gbc.insets = new Insets(2, 2, 2, 2); // 여백생성
  add(c, gbc);
 } // 그리드백레이아웃에 추가하는 메소드
 
 public void actionPerformed(ActionEvent e)
 {
  if(e.getSource() == btnAdd)
  {
   AddUser();
  }
  else if(e.getSource() == btnCancel)
  {
   this.dispose();
  }
  else if(e.getSource() == btnModify)
  {
   ModifyUser();
  }
  else if(e.getSource() == btnRemove)
  {
   int a = JOptionPane.showConfirmDialog(this, "정말 삭제하시겠습니까?", "Confirm", JOptionPane.YES_NO_OPTION);
   if(a == JOptionPane.OK_OPTION)
   {
    RemoveUser();
   }
   else
   {
    JOptionPane.showMessageDialog(this, "취소되었습니다.");
   }
  }
  
 }
 private void AddUser()
 {
  
 }
 private void ModifyUser()
 {
  
 }
 private void RemoveUser()
 {
  
 }
 public static void main(String args[])
 {
  new UserGUI();
 }
 
}
